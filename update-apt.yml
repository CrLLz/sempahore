---
    - name: Update and upgrade apt packages
      hosts: all
      gather_facts: true
      become: true

      vars:
          playbook_name: "{{ (lookup('file', '/proc/self/cmdline') | regex_replace('\u0000',' ')).split()|select('match','^[a-z-_/]*[.]y[a]*ml')|list|first|basename }}"
      
      tasks:

        - block:
          - set_fact:
              down: "{{ ansible_play_hosts_all|difference(ansible_play_hosts) }}"
          - name: send notification if any host is unreachable
            community.general.discord:
              webhook_id: "{{ discord_id_ansible }}"
              webhook_token: "{{ discord_token_ansible }}"
              content: "<@&1294264865011273800>"
              embeds:
                - title: "Host Unreachable"
                  description: | 
                              List : 
                              --------------------------------------------
                              {% for item in down -%}                                               
                              **{{ item }}**                                                          
                              {% endfor %}
                              --------------------------------------------
                  footer:
                    text: "Script : {{ playbook_name }}"
            when: down
          run_once: true
      
        - name: Update packages with apt
          ignore_errors: true
          when: ansible_pkg_mgr == 'apt'
          ansible.builtin.apt:
            update_cache: true
          register: result_update
    
        - name: send notification if update failed
          community.general.discord:
              webhook_id: "{{ discord_id_ansible }}"
              webhook_token: "{{ discord_token_ansible }}"
              content: "<@&1294264865011273800>"
              embeds:
                - title: "Update Failed"
                  description: |
                              Host : **`{{ inventory_hostname }}`**

                          Recap : 
                          --------------------------------------------
                          {% for item in result_update|combine|dict2items -%}                                               
                          **{{item.key}}** : {{item.value}}                                                          
                          {% endfor %}
                          --------------------------------------------
                  footer:
                    text: "Script : {{ playbook_name }}"
            when: result_update.failed == True
    
        - name: Upgrade packages with apt
          ignore_errors: true
          when: ansible_pkg_mgr == 'apt'
          ansible.builtin.apt:
            upgrade: dist
          register: result_upgrade
    
        - name: send notification if upgrade failed
          community.general.discord:
              webhook_id: "{{ discord_id_ansible }}"
              webhook_token: "{{ discord_token_ansible }}"
              content: "<@&1294264865011273800>"
              embeds:
                - title: "Upgrade Failed"
                  description: |
                              Host : **`{{ inventory_hostname }}`**

                          Recap : 
                          --------------------------------------------
                          {% for item in result_upgrade|combine|dict2items -%}                                               
                          **{{item.key}}** : {{item.value}}                                                          
                          {% endfor %}
                          --------------------------------------------
                  footer:
                    text: "Script : {{ playbook_name }}"
            when: result_upgradee.failed == True

        - name: check if system reboot is required
          stat:
            path: /var/run/reboot-required
          register: reboot_required
    
        - name: Send a embedded message to the Discord channel
          community.general.discord:
            # https://discord.com/api/webhooks/nnnnnnnnnn/xxxxxxxxxxxxxxxxxxxxxxxxxxx
            #                                  |        | |                         |
            #                  webhook_id <----'--------' |                         |
            #                                             |                         |
            #                  webhook_token <------------'-------------------------'
            webhook_id: "{{ discord_id_ansible }}"
            webhook_token: "{{ discord_token_ansible }}"
            content: "<@&1294264865011273800>" # Tagged Role : @Pings
            embeds:
              - title: "Packages update"
                description: "Reboot is required on : ***{{ inventory_hostname }}***"
                footer:
                  text: "Script : {{ playbook_name }}"
          when : reboot_required.stat.exists
